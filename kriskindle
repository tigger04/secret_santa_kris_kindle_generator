#!/usr/bin/env bash

#shellcheck source=helper.sh
source ~/bin/helper.sh

# decide whether this is appropriate:
set -e

# init switch flags
participants=participants.txt
exclusions=exclusions
fixes=fixes

function usage {
	 cat <<EOM
Usage: $(basename "$0") [OPTION]...

  -g            generate example input files and folders
                at current directory
  -p <FILE>     location of participant file
                [default: ${bold}${participants}$ansi_off]
  -e <FILE>     exclusions folder
                [default: ${bold}${exclusions}$ansi_off/]
  -f <FILE>     fixes folder
                [default: ${bold}${fixes}$ansi_off/]
  -h            display help
EOM

	 exit 2
}


checks () {
    [ -n "$debug" ] && declare -p participants exclusions fixes
    [ -n "$participants" ] && [ -f "$participants" ] || quit "cannot find participants file: $participants"
    num_participants="$( find "$participants" -type f | wc -l )"
    [ $num_particpants -gt 0 ] || quit no particpants defined
    [ -n "$exclusions" ] && [ -d "$exclusions" ] || info "no exclusions folder found: $exclusions"
    [ -n "$fixes" ] && [ -d "$fixes" ] || info "no fixes folder found: $fixes"
}


generate_example_files () {
    [ -e "$participants" ] && quit "$participants" already exists

    cat > "$participants" <<eof
Pike
Chin-Riley
Kirk
Spock
Picard
Riker
Sisko
Nerys
Janeway
Chakotay
O'Brien
T'Pol
eof

    exit 0
}

while getopts ":gepxf" optKey; do
	 case "$optKey" in
        g)
            generate_example_files
            ;;
		  e)
			   exclusions="$OPTARG"
			   ;;
		  p)
			   participants="$OPTARG"
			   ;;
		  f)
			   fixes="$OPTARG"
			   ;;
		  h|*)
			   usage
			   ;;
	 esac
done

shift $((OPTIND - 1))


if [[ "$0" == "${BASH_SOURCE[0]}" ]]; then

    checks
else
    echo "Happy debugging!"
fi


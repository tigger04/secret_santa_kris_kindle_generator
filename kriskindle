#!/usr/bin/env bash

#shellcheck source=helper.sh
source ~/bin/helper.sh

# decide whether this is appropriate:
set -e
unset arg_generate_stdout arg_generate_file arg_input_file

function usage {
	 cat <<eom
    Usage: $(basename "$0") [OPTION]...

    -g         generate example input to file 
    -G         generate example input to stdout
    -i <FILE>  location of input file [default: STDIN]
    -h         display help
eom

	 exit 2
}

while getopts "Gg:ih" optKey; do
	   case "$optKey" in
          G)
              arg_generate_stdout=true
              ;;
		    g)
			     arg_generate_file=true
			     ;;
		    i)  arg_input_file="$OPTARG"
			     ;;
		    h|*)
			     usage
			     ;;
	   esac
done

declare -p OPTIND

shift $((OPTIND - 1))
# init switch flags
run_id="${EPOCHSECONDS}.$RANDOM$RANDOM"
participants="participants.$run_id"
exclusions="exclusions.$run_id"
fixes="fixes.$run_id"

generate () {

    cat - <<<eof
    Picard =Nerys
    Riker -Picard
    Kirk -Spock
    Spock -Kirk
    Sisko -Nerys -Worf -O\'Brien
    Janeway -Chakotay -Kirk -Picard -Sisko
    Chakotay -Janeway
    T\'Pol
    O\'Brien
    Worf =Picard
    eof
    
}




checks () {
    warn checks not implemented yet
    return 0
}

if [[ "$0" == "${BASH_SOURCE[0]}" ]]; then
    checks || die

    [ -n "$arg_input_file" ] \
        && info "using input file $arg_input_file" \
        && "$0" < "$arg_input_file" \
        && exit $?
    
    [ -n "$arg_generate_file" ] \
    && "$0" -g > "$arg_generate_file" \


    
            [ -n "$generate" ] && generate_example_files
    checks
else
    echo "Happy debugging!"
fi

